{"ast":null,"code":"import \"antd/lib/empty/style/css\";\nimport _Empty from \"antd/lib/empty\";\nvar __jsx = React.createElement;\nimport React, { useContext, useMemo } from \"react\";\nimport Router from \"next/router\";\nimport { fixedZero, inThisWeek } from \"../../utils/util\";\nimport { ColorContext } from \"../Context\";\nimport IconFont from \"../IconFont\";\nimport moment from \"moment\";\nimport styles from \"./index.less\";\n\nconst goAnimate = (type, slug) => {\n  Router.push(`/${type}/slug/${slug}`);\n};\n\nconst reactComponent = props => {\n  const {\n    list,\n    type,\n    update = false,\n    status = false\n  } = props;\n  return __jsx(React.Fragment, null, list.length === 0 ? __jsx(_Empty, {\n    style: {\n      margin: \"30px 0\"\n    },\n    description: false\n  }) : __jsx(\"div\", {\n    className: styles.wrapper\n  }, list.map(item => __jsx(\"div\", {\n    className: styles.top,\n    style: {\n      backgroundImage: `url(${item.coverVertical})`\n    },\n    onClick: () => {\n      goAnimate(type, item.slug);\n    },\n    key: item._id\n  }, __jsx(\"span\", null, item.title), update && __jsx(\"div\", {\n    className: `${styles.update} ${inThisWeek(item.updatedAt) ? styles.update : \"\"}`\n  }, fixedZero(item.countEposide)), __jsx(\"div\", {\n    className: styles.rate\n  }, item.countStar)))));\n};\n\nexport default reactComponent;","map":null,"metadata":{},"sourceType":"module"}