{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Head from \"next/head\";\nimport api from \"../utils/api\";\nimport Nav from \"../components/Nav\";\nimport Footer from \"../components/Footer\";\nimport ScrollTop from \"../components/IndexScroll\";\nimport IndexList from \"../components/IndexList\";\nimport { IndexNew } from \"../components/NewList\";\nimport { indexInit } from \"../utils/util\";\nimport request from \"../utils/request\";\nimport styles from \"./index.less\";\nimport { ColorContext } from \"../components/Context\";\n\nclass Index extends Component {\n  static async initData() {\n    const res = await request(api.config, {}, \"GET\");\n    return res || {};\n  }\n\n  static async initHome() {\n    const res = await request(api.home, {}, \"GET\");\n    return res || {};\n  }\n\n  static async getInitialProps({\n    req\n  }) {\n    const config = await this.initData();\n    const {\n      pcIndex = []\n    } = config;\n    const indexModule = indexInit(pcIndex);\n    const indexAll = await this.initHome();\n    return {\n      config,\n      indexAll: _Object$values(indexAll),\n      indexModule\n    };\n  }\n\n  render() {\n    const {\n      config: {\n        name,\n        slogan,\n        headimg\n      },\n      config,\n      indexAll,\n      indexModule\n    } = this.props;\n    return __jsx(ColorContext.Provider, {\n      value: config.color\n    }, __jsx(Head, null, __jsx(\"title\", null, config.name), __jsx(\"link\", {\n      rel: \"shortcut icon\",\n      href: config.favcion,\n      key: \"favcion\"\n    })), __jsx(Nav, {\n      config: config\n    }), __jsx(\"div\", {\n      className: styles.index\n    }, __jsx(\"div\", {\n      className: styles.header,\n      style: {\n        backgroundImage: `url(${headimg})`\n      }\n    }, __jsx(\"div\", {\n      className: styles.title\n    }, __jsx(\"span\", null, name), __jsx(\"p\", null, slogan))), indexModule.length > 2 && __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(ScrollTop, {\n      value: {\n        scroll: indexAll[0] ? indexAll[0].list : [],\n        top: indexAll[1] ? indexAll[1].list : [],\n        type: \"animate\"\n      }\n    }), indexModule.slice(2, indexModule.length).map((item, index) => {\n      return /newIndexNew/.test(item._id) ? __jsx(IndexNew, {\n        value: {\n          info: item,\n          list: indexAll[index + 2] ? indexAll[index + 2].list : []\n        },\n        key: item._id\n      }) : __jsx(IndexList, {\n        value: {\n          info: item,\n          list: indexAll[index + 2] ? indexAll[index + 2].list : []\n        },\n        key: item._id\n      });\n    }))), __jsx(Footer, {\n      config: config\n    }));\n  }\n\n}\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}