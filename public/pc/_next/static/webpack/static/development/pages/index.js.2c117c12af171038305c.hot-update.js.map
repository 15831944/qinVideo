{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2c117c12af171038305c.hot-update.js","sources":["webpack:///./utils/util.js"],"sourcesContent":["import moment from \"moment\";\r\n\r\nexport const hexToRgb = (hex, opacity) => {\r\n  const rgb = [];\r\n\r\n  hex = hex.substr(1);\r\n\r\n  if (hex.length === 3) {\r\n    hex = hex.replace(/(.)/g, \"$1$1\");\r\n  }\r\n\r\n  hex.replace(/../g, function(color) {\r\n    rgb.push(parseInt(color, 0x10));\r\n  });\r\n\r\n  return `rgba(${rgb.join(\",\")},${opacity})`;\r\n};\r\n\r\nexport function fixedZero(val) {\r\n  return val * 1 < 10 ? `0${val}` : val;\r\n}\r\n\r\nconst indexLabel = {\r\n  newIndexPlayAnimate: \"播放最高\",\r\n  newIndexRateAnimate: \"评分最高\",\r\n  newIndexNewAnimate: \"新番连载\",\r\n  newIndexRandomAnimate: \"随机推荐\",\r\n  newIndexPlayComic: \"播放最高\",\r\n  newIndexRateComic: \"评分最高\",\r\n  newIndexNewComic: \"新漫连载\",\r\n  newIndexRandomComic: \"随机推荐\"\r\n};\r\n\r\nexport const indexInit = arr => {\r\n  return arr.map((item, key) => {\r\n    if (/new/.test(item)) {\r\n      const type = /Animate/.test(item) ? \"animate\" : \"comic\";\r\n      let icon;\r\n      if (/newIndexNew/.test(item)) {\r\n        icon = \"icon-xinpin\";\r\n      } else if (/newIndexRandom/.test(item)) {\r\n        icon = \"icon-three\";\r\n      } else if (/newIndexPlay/.test(item)) {\r\n        icon = \"icon-ic_movie_filter\";\r\n      } else if (/newIndexRate/.test(item)) {\r\n        icon = \"icon-huiyuan\";\r\n      }\r\n      return {\r\n        _id: item,\r\n        name: indexLabel[item],\r\n        status: \"custom\",\r\n        type,\r\n        icon\r\n      };\r\n    } else {\r\n      item = JSON.parse(item);\r\n      item.kind = item.type;\r\n      switch (item.type) {\r\n        case \"akind\":\r\n          item.type = \"animate\";\r\n          break;\r\n        case \"ckind\":\r\n          item.type = \"comic\";\r\n          break;\r\n        case \"pkind\":\r\n          item.type = \"post\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      const iconArr = [\r\n        \"icon-zhandouzuozhan\",\r\n        \"icon-kafeibei\",\r\n        \"icon-zhinengyouhua\",\r\n        \"icon-yule\",\r\n        \"icon-youxian\",\r\n        \"icon-mudedi\",\r\n        \"icon-kongdiao\"\r\n      ];\r\n      const icon = iconArr[key % 6];\r\n      return {\r\n        ...item,\r\n        status: \"normal\",\r\n        icon\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\nexport const indexTrans = element => {\r\n  const id = element._id;\r\n  let query = {\r\n    size: 20,\r\n    page: 1,\r\n    sortBy: \"updatedAt\",\r\n    sortOrder: -1\r\n  };\r\n  if (element.status === \"normal\") {\r\n    const type = element.type === \"animate\" ? \"kind\" : element.type;\r\n    query[type] = id;\r\n  } else if (element.status === \"custom\") {\r\n    let newQuery = {};\r\n    if (/newIndexNew/.test(id)) {\r\n      newQuery = {\r\n        update: true,\r\n        size: 100\r\n      };\r\n    } else if (/newIndexRandom/.test(id)) {\r\n      newQuery = {\r\n        sortBy: \"introduce\"\r\n      };\r\n    } else if (/newIndexPlay/.test(id)) {\r\n      newQuery = {\r\n        sortBy: \"countPlay\"\r\n      };\r\n    } else if (/newIndexRate/.test(id)) {\r\n      newQuery = {\r\n        sortBy: \"countStar\"\r\n      };\r\n    }\r\n    query = {\r\n      ...query,\r\n      ...newQuery\r\n    };\r\n  }\r\n\r\n  return query;\r\n};\r\n\r\nexport const weekGroup = list => {\r\n  const week = {\r\n    day0: [],\r\n    day1: [],\r\n    day2: [],\r\n    day3: [],\r\n    day4: [],\r\n    day5: [],\r\n    day6: []\r\n  };\r\n  list.map(item => {\r\n    const day = item.updateDay;\r\n    week[`day${day}`].push(item);\r\n  });\r\n  return week;\r\n};\r\n\r\nexport const inThisWeek = time => {\r\n  const update = moment(time);\r\n  const now = new Date();\r\n  let day = now.getDay();\r\n  now.setHours(0);\r\n  now.setMinutes(0);\r\n  now.setSeconds(0);\r\n\r\n  if (day === 0) {\r\n    day = 6;\r\n  } else {\r\n    day -= 1;\r\n  }\r\n\r\n  const beginTime = now.getTime() - day * 1000 * 3600 * 24;\r\n  return update.valueOf() > beginTime;\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAXA;AACA;AAYA;AASA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}