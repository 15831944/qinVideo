{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2a97fdad4692effd698f.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Head from \"next/head\";\r\nimport api from \"../utils/api\";\r\nimport Nav from \"../components/Nav\";\r\nimport Footer from \"../components/Footer\";\r\nimport ScrollTop from \"../components/IndexScroll\";\r\nimport IndexList from \"../components/IndexList\";\r\nimport { IndexNew } from \"../components/NewList\";\r\nimport { indexInit, indexTrans } from \"../utils/util\";\r\nimport request from \"../utils/request\";\r\nimport styles from \"./index.less\";\r\nimport { ColorContext } from \"../components/Context\";\r\n\r\nclass Index extends Component {\r\n  static async initData() {\r\n    const res = await request(api.config, {}, \"GET\");\r\n    return res || {};\r\n  }\r\n\r\n  static async getInitialProps({ req }) {\r\n    const config = await this.initData();\r\n    const { pcIndex = [] } = config;\r\n    const indexModule = indexInit(pcIndex);\r\n    // const indexAll = await Promise.all(\r\n    //   indexModule.map(item => {\r\n    //     return request(api[item.type], { query: indexTrans(item) }, \"GET\");\r\n    //   })\r\n    // );\r\n\r\n    return {\r\n      config,\r\n      indexAll,\r\n      indexModule\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      config: { name, slogan, headimg },\r\n      config,\r\n      indexAll,\r\n      indexModule\r\n    } = this.props;\r\n\r\n    return (\r\n      <ColorContext.Provider value={config.color}>\r\n        <Head>\r\n          <title>{config.name}</title>\r\n          <link rel=\"shortcut icon\" href={config.favcion} key=\"favcion\"></link>\r\n        </Head>\r\n\r\n        <Nav config={config} />\r\n        <div className={styles.index}>\r\n          <div\r\n            className={styles.header}\r\n            style={{ backgroundImage: `url(${headimg})` }}\r\n          >\r\n            <div className={styles.title}>\r\n              <span>{name}</span>\r\n              <p>{slogan}</p>\r\n            </div>\r\n          </div>\r\n          {indexModule.length > 2 && (\r\n            <div className=\"container\">\r\n              <ScrollTop\r\n                value={{\r\n                  scroll: indexAll[0] ? indexAll[0].list : [],\r\n                  top: indexAll[1] ? indexAll[1].list : [],\r\n                  type: \"animate\"\r\n                }}\r\n              />\r\n              {indexModule.slice(2, indexModule.length).map((item, index) => {\r\n                return /newIndexNew/.test(item._id) ? (\r\n                  <IndexNew\r\n                    value={{\r\n                      info: item,\r\n                      list: indexAll[index + 2] ? indexAll[index + 2].list : []\r\n                    }}\r\n                    key={item._id}\r\n                  />\r\n                ) : (\r\n                  <IndexList\r\n                    value={{\r\n                      info: item,\r\n                      list: indexAll[index + 2] ? indexAll[index + 2].list : []\r\n                    }}\r\n                    key={item._id}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Footer config={config}></Footer>\r\n      </ColorContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AAFA;AAIA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AAIA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;AAjFA;AACA;;AADA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;AACA;;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;;;;;;;;;;;;;;;;;;AAjBA;AACA;AAqFA;;;;A","sourceRoot":""}